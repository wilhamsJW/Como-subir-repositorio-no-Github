 COMO SUBIR UM REPOSITÓRIO PARA O GITHUB




clonar COM HTTP DO GITHUB

copiar a pasta meste para a pasta clone

entra na pasta clonada

git add . (todo arquivo modificado ele envia, cria um index p enviar)




git commit -m "qualquernome"
git pull (só é usado pra pegar algo do remoto e trazer pra sua máquina)
git push (serve pra enviar arquivos da sua máquina p/ o repositorio remoto)
 



COMANDOS:
cd serve pra acessar uma pasta, se a pasta tiver no desktop, coloca-se cd desktop
cd + o nome da pasta serve pra acessa a pasta
cd




   --->REMOVER UM REMOTE:

$ git remote rm origin .... origin é o nome padrâo do remote

   --->VERIFICAR SE HÁ UM REMOTE:

$ git remote

   --->SABER QUEM É O REMOTE ou verificar remote

$ git remote -v

    


         ---->>> ERROS EXISTENTE ---> 
         
         
         $ git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master


    Esse erro está pedindo pra add o upstream, execute o código:

    git remote add upstream https://github.com/wilhamsJW/Como-criar-repositorio-no-Github.git





    ----->>>E se quiser mudar o seu repo (origin) pra acessar via SSH (pois está acessando via
     HTTPS), só executar:

git remote set-url origin  https://github.com/wilhamsJW/Como-criar-repositorio-no-Github.git


---->>>   ESTE É UM ERRO Q APARECE AS VEZES AO DÁ UM GIT PUSH


$ git push
To https://github.com/wilhamsJW/Emascript6.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/wilhamsJW/Emascript6.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.


ELE pede pra dá um git pull, entâo add o arquivo com add .   e commit e logo após de um git pull orgin master
depois de um git push

